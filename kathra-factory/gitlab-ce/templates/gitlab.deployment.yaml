apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  labels:
    project: "gitlab"
  name: "gitlab"
  ownerReferences: []
spec:
  replicas: 1
  selector:
    matchLabels:
      project: "gitlab"
  template:
    metadata:
      labels:
        project: "gitlab"
    spec:
      volumes:
        - name: gitlab-data
          persistentVolumeClaim:
            claimName: gitlab-data
        - name: gitlab-backup
          persistentVolumeClaim:
            claimName: gitlab-backup
        - name: gitlab-logs
          persistentVolumeClaim:
            claimName: gitlab-logs
        - name: gitlab-config
          persistentVolumeClaim:
            claimName: gitlab-config
        - name: gitlab-gitlab-rb
          configMap:
            name: gitlab-gitlab-rb
      containers:
      - args: []
        command: []
        env:
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        image: "gitlab/gitlab-ce:11.2.3-ce.0"
        imagePullPolicy: "IfNotPresent"
        name: "gitlab"
        ports:
        - containerPort: {{ .Values.configuration.ssh.containerPort }}
          name: "ssh"
        - containerPort: 80
          name: "http"
        - containerPort: 443
          name: "https"
        resources:
          limits:
            cpu: "4"
            memory: 8Gi
          requests:
            cpu: "2"
            memory: 4Gi
        volumeMounts:
          - name: gitlab-data
            mountPath: /var/opt/gitlab
          - name: gitlab-backup
            mountPath: /var/opt/gitlab/backups
          - name: gitlab-logs
            mountPath: /var/log/gitlab
          - name: gitlab-config
            mountPath: /etc/gitlab
          - mountPath: /etc/gitlab/gitlab.rb
            name: gitlab-gitlab-rb
            subPath: gitlab.rb
      imagePullSecrets: []
      nodeSelector: {}
